---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trino-coordinator
  namespace: $(namespace)
spec:
  selector:
    matchLabels:
      app: trino-coordinator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: trino-coordinator
      annotations:
        prometheus.io/trino_scrape: "true"
        prometheus.io/jmx_scrape: "true"
        prometheus.io/jmx_port: "5556"
        prometheus.io/jmx_path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: trino
        image: trinodb/trino:475
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: jmx-registry
          containerPort: 9080
          protocol: TCP
        - name: jmx-server
          containerPort: 9081
          protocol: TCP
        env:
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: trino-secrets
              key: S3_REGION
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: trino-secrets
              key: S3_ACCESS_KEY
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: trino-secrets
              key: S3_SECRET_KEY
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/trino/jvm.config
          subPath: jvm.config
        - name: trino-cfg-vol
          mountPath: /etc/trino/config.properties
          subPath: config.properties.coordinator
        - name: trino-cfg-vol
          mountPath: /etc/trino/node.properties
          subPath: node.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/password-authenticator.properties
          subPath: password-authenticator.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/group-provider.properties
          subPath: group-provider.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/access-control.properties
          subPath: access-control.properties
        - name: trino-cfg-vol
          mountPath: /etc/trino/catalog/iceberg.properties
          subPath: iceberg.properties
        - name: trino-access-vol
          mountPath: /etc/trino/groups
          subPath: trino-groups.txt
        - name: trino-access-vol
          mountPath: /etc/trino/rules.json
          subPath: trino-rules.json
        - name: trino-pw-vol
          mountPath: /etc/trino/password.db
          subPath: password.db
        resources:
          requests:
            memory: "4G"
            cpu: "2"
          limits:
            memory: "8G"
            cpu: "4"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /v1/info
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        readinessProbe:
          exec:
            command: [ /usr/lib/trino/bin/health-check ]
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
      - name: jmx-exporter
        image: bitnami/jmx-exporter:1.0.1
        imagePullPolicy: IfNotPresent
        securityContext: {}
        env: []
        envFrom: []
        ports:
        - name: jmx-exporter
          containerPort: 5556
          protocol: TCP
        args:
        - "5556"
        - /etc/jmx-exporter/jmx-exporter-config.yaml
        volumeMounts:
        - name: trino-cfg-vol
          mountPath: /etc/jmx-exporter/jmx-exporter-config.yaml
          subPath: jmx-exporter-config.yaml
      volumes:
        - name: trino-cfg-vol
          configMap:
            name: trino-configs
        - name: trino-access-vol
          configMap:
            name: trino-access
        - name: trino-pw-vol
          secret:
            secretName: trino-passwd
